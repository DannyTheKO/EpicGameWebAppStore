@model IEnumerable<Domain.Entities.Game>

@{
	ViewData["Title"] = "Game List";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="mt-4">Game List</h1>

<p>
	<a asp-action="Create" class="btn btn-success">Create New Game</a>
</p>

<div class="table-responsive">
	<table class="table table-striped table-bordered mt-3">
		<thead>
		<tr>
			<th>@Html.DisplayNameFor(model => model.First().Title)</th>
			<th>@Html.DisplayNameFor(model => model.First().Price)</th>
			<th>@Html.DisplayNameFor(model => model.First().Author)</th>
			<th>@Html.DisplayNameFor(model => model.First().Release)</th>
			<th>@Html.DisplayNameFor(model => model.First().Rating)</th>
			<th>@Html.DisplayNameFor(model => model.First().Description)</th>
			<th>@Html.DisplayNameFor(model => model.First().Genre.Name)</th>
			<th>@Html.DisplayNameFor(model => model.First().Publisher.Name)</th>
			<th>Actions</th>
		</tr>
		</thead>
		<tbody>
		@if (!Model.Any())
		{
			<tr>
				<td colspan="9" class="text-center">No games found.</td>
			</tr>
		}
		else
		{
			foreach (var item in Model)
			{
				<tr>
					<td>@Html.DisplayFor(modelItem => item.Title)</td>
					<td>@Html.DisplayFor(modelItem => item.Price)</td>
					<td>@Html.DisplayFor(modelItem => item.Author)</td>
					<td>@Html.DisplayFor(modelItem => item.Release)</td>
					<td>@Html.DisplayFor(modelItem => item.Rating)</td>
					<td>@Html.DisplayFor(modelItem => item.Description)</td>
					<td>@Html.DisplayFor(modelItem => item.Genre.Name)</td>
					<td>@Html.DisplayFor(modelItem => item.Publisher.Name)</td>
					<td>
						<div class="d-flex justify-content-around">
							<a asp-action="Update" asp-route-id="@item.GameId" class="btn btn-warning">Update</a> |
							<a asp-action="Delete" asp-route-id="@item.GameId" class="btn btn-danger">Delete</a>
						</div>
					</td>
				</tr>
			}
		}
		</tbody>
	</table>
</div>